class Parser	prechigh		nonassoc TokNot		left TokMult TokDiv TokMod		left TokMinus TokPlus  		nonassoc TokLess TokMoreEq TokLessEq TokMore TokEqual TokNotEqual		left TokOr TokAnd	preclow	token TokLess TokFi TokPlus TokOr TokAs TokEqual TokValue TokProc TokMore TokOd TokNot TokAssign TokNotEqual TokOf TokDo TokArray TokNumber TokReturn TokSelect TokIn TokDiv TokLength TokTrue TokShow TokTwoDots TokComma TokAnd TokString TokMinus TokSkip TokEnd TokOpBracet TokMain TokOut TokOpenParen TokCloseBracket TokLessEq TokCloseParen TokIf TokFalse TokMod TokBegin TokString TokId TokDotComma TokMult TokMoreEq TokVar
		start STARTruleSTART	: MAIN                                            {puts 1}		| VAR MAIN                                        {puts 1}		| PROC MAIN                                       {puts 1}		| VAR PROC MAIN                                   {puts 1}		PROC	: PROCEDIMIENTO                                 {puts 1}		| PROC PROCEDIMIENTO                                 {puts 1}		MAIN	: TokMain LIST_INST TokEnd                                 {puts 1}		VAR : TokVar LIST_ID TokTwoDots TIPO                                 {puts 1}LIST_ID : TokId                                 {puts 1}		| LIST_ID TokComma TokId                                 {puts 1}		TIPO 	: TokValue                                 {puts 1}		| TokArray TokOf TokNumber                                 {puts 1}		LIST_EXPR	: EXPRESION                                 {puts 1}			| LIST_EXPR TokDotComma EXPRESION                                 {puts 1}				INSTRUCCION : TokSkip                                 {puts 1}			| ASIGNACION                                 {puts 1}			| ASIGNARRAY                                 {puts 1}			| TokBegin LIST_INST TokEnd                                 {puts 1}			| TokIf SELECCION TokFi                                 {puts 1}			| TokDo SELECCION TokOd                                 {puts 1}			| TokId TokOpenParen LIST_EXPR TokCloseParen                                  {puts 1}			| TokShow EXPRESION                                 {puts 1}			| TokShow TokString                                 {puts 1}			LIST_INST	: INSTRUCCION                                 {puts 1}			| LIST_INST TokDotComma INSTRUCCION                                 {puts 1}			SELECCION 	: GUARDIA TokSelect INSTRUCCION                                 {puts 1}			| SELECCION GUARDIA TokSelect INSTRUCCION                                 {puts 1}ASIGNACION	: TokId TokAssign EXPRESION                                 {puts 1}			| TokId TokComma ASIGNACION TokComma EXPRESION                                 {puts 1}ASIGNARRAY	: TokId TokOpBracet EXPRESION TokCloseBracket TokAssign EXPRESION                                 {puts 1}			| TokId TokOpBracet EXPRESION TokCloseBracket TokComma ASIGNARRAY TokComma EXPRESION                                 {puts 1}PROCEDIMIENTO : TokProc TokId TokOpenParen PARAMETRO TokCloseParen TokAs INSTRUCCION                                 {puts 1}			  | TokProc TokId TokOpenParen PARAMETRO TokCloseParen TokAs VAR INSTRUCCION                                 {puts 1}PARAMETRO 	:TokIn TokId                                 {puts 1}			|TokOut TokId                                 {puts 1}			|PARAMETRO TokComma TokIn TokId                                 {puts 1}			|PARAMETRO TokComma TokOut TokId                                 {puts 1}EXPRESION:TokNumber                                 {puts 1}		| TokId                                 {puts 1}		| TokLength TokId                                 {puts 1}		| EXPRESION EXPROPER                                 {puts 1}		| TokOpenParen EXPRESION TokCloseParen                                 {puts 1}		| TokId TokOpBracet EXPRESION TokCloseBracket                                 {puts 1}EXPROPER: TokMult EXPRESION                                 {puts 1}		| TokMinus EXPRESION                                 {puts 1}		| TokPlus EXPRESION                                 {puts 1}		| TokDiv EXPRESION                                 {puts 1}		| TokMod EXPRESION                                 {puts 1}GUARDIA : EXPRESION COMPARE                                 {puts 1}		| TokTrue                                 {puts 1}		| TokFalse                                 {puts 1}		| GUARDIA GUARDIAOPER                                 {puts 1}		| TokNot GUARDIA                                 {puts 1}		GUARDIAOPER: TokOr GUARDIA                                 {puts 1}		   | TokAnd GUARDIA                                 {puts 1}COMPARE: TokLess EXPRESION                                 {puts 1}		| TokMoreEq EXPRESION                                 {puts 1}		| TokLessEq EXPRESION                                 {puts 1}		| TokMore EXPRESION                                 {puts 1}		| TokEqual EXPRESION                                 {puts 1}		| TokNotEqual EXPRESION	                                 {puts 1}	end---- header ----require 'Lexer.rb'

---- inner ----

def initialize(l)
    @lex =l
end

def parser
    do_parse
end

def next_token
    t= @lex.yylex
    if t== nil then return [false,false] end
    if t!=nil then return [t.class.to_s.to_sym, t.value] end
end

---- footer ----
	
